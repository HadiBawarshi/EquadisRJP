// <auto-generated />
using System;
using EquadisRJP.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EquadisRJP.Infrastructure.Migrations
{
    [DbContext(typeof(EquadisRJPDbContext))]
    [Migration("20250711193830_add-AuditLog")]
    partial class addAuditLog
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EquadisRJP.Domain.Entities.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ActorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs", (string)null);
                });

            modelBuilder.Entity("EquadisRJP.Domain.Entities.CommercialOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiscountValuePercentage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("CommercialOffer", (string)null);
                });

            modelBuilder.Entity("EquadisRJP.Domain.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Country", (string)null);
                });

            modelBuilder.Entity("EquadisRJP.Domain.Entities.OfferSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommercialOfferId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RetailerId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommercialOfferId");

                    b.HasIndex("RetailerId");

                    b.ToTable("OfferSubscription", (string)null);
                });

            modelBuilder.Entity("EquadisRJP.Domain.Entities.Partnership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RetailerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RetailerId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Partnership", (string)null);
                });

            modelBuilder.Entity("EquadisRJP.Domain.Entities.Retailer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StoreName")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("StoreTypeId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("StoreTypeId");

                    b.ToTable("Retailer", (string)null);
                });

            modelBuilder.Entity("EquadisRJP.Domain.Entities.StoreType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("StoreType", (string)null);
                });

            modelBuilder.Entity("EquadisRJP.Domain.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Supplier", (string)null);
                });

            modelBuilder.Entity("EquadisRJP.Domain.Entities.CommercialOffer", b =>
                {
                    b.HasOne("EquadisRJP.Domain.Entities.Supplier", "Supplier")
                        .WithMany("CommercialOffers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CommercialOffer_Supplier");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("EquadisRJP.Domain.Entities.OfferSubscription", b =>
                {
                    b.HasOne("EquadisRJP.Domain.Entities.CommercialOffer", "CommercialOffer")
                        .WithMany()
                        .HasForeignKey("CommercialOfferId")
                        .HasConstraintName("FK_OfferSubscription_CommercialOffer");

                    b.HasOne("EquadisRJP.Domain.Entities.Retailer", "Retailer")
                        .WithMany()
                        .HasForeignKey("RetailerId")
                        .HasConstraintName("FK_OfferSubscription_Retailer");

                    b.Navigation("CommercialOffer");

                    b.Navigation("Retailer");
                });

            modelBuilder.Entity("EquadisRJP.Domain.Entities.Partnership", b =>
                {
                    b.HasOne("EquadisRJP.Domain.Entities.Retailer", "Retailer")
                        .WithMany("Partnerships")
                        .HasForeignKey("RetailerId")
                        .HasConstraintName("FK_Partnership_Retailer");

                    b.HasOne("EquadisRJP.Domain.Entities.Supplier", "Supplier")
                        .WithMany("Partnerships")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_Partnership_Supplier");

                    b.Navigation("Retailer");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("EquadisRJP.Domain.Entities.Retailer", b =>
                {
                    b.HasOne("EquadisRJP.Domain.Entities.StoreType", "StoreType")
                        .WithMany("Retailers")
                        .HasForeignKey("StoreTypeId")
                        .HasConstraintName("FK_Retailer_StoreType");

                    b.Navigation("StoreType");
                });

            modelBuilder.Entity("EquadisRJP.Domain.Entities.Supplier", b =>
                {
                    b.HasOne("EquadisRJP.Domain.Entities.Country", "Country")
                        .WithMany("Suppliers")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Supplier_Country");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("EquadisRJP.Domain.Entities.Country", b =>
                {
                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("EquadisRJP.Domain.Entities.Retailer", b =>
                {
                    b.Navigation("Partnerships");
                });

            modelBuilder.Entity("EquadisRJP.Domain.Entities.StoreType", b =>
                {
                    b.Navigation("Retailers");
                });

            modelBuilder.Entity("EquadisRJP.Domain.Entities.Supplier", b =>
                {
                    b.Navigation("CommercialOffers");

                    b.Navigation("Partnerships");
                });
#pragma warning restore 612, 618
        }
    }
}
